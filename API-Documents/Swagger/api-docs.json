{"openapi":"3.0.1","info":{"title":"MultiPay API","description":"This API is a sample payment service integrated to multiple external payment service providers  (Two sample service is integrated currently but there is not limit). Service anables saving customers and cards of the customers to mysql database and requesting payments to selected (selection is made with providerId field and currenly 1 and 2 are selectable) external payment service providers. And if external payment service confirms that the payment is made card balance is updated and payment is recorded to payments table.     <br /> Lastly, all payments can be queried by date interval or curtomer number or card number.<br />\r\n     <br /> Tech Stack:\r\n     <br />\r\n     <br /> Language: Java 17\r\n     <br /> Framework: Spring Boot 3.2.5\r\n     <br /> Database: MySql\r\n     <br /> DB Management: Spring Data JPA\r\n     <br /> Unit Tests: JUnit and Maven Surefire for test reports\r\n     <br /> Documentation: Swagger 3 - (OpenAPI)\r\n     <br /> Build Tool: Maven","contact":{"name":"Ozgur Yatmaz","url":"https://www.linkedin.com/in/ozguryatmaz","email":"ozguryatmaz@yandex.com"},"license":{"name":"MIT License","url":"https://choosealicense.com/licenses/mit/"},"version":"1.0.0"},"servers":[{"url":"http://localhost:8080","description":"Server URL in Development environment"},{"url":"not-exist","description":"Server URL in Production environment"}],"tags":[{"name":"Customer controller","description":"Add  and fetch customers"},{"name":"Transaction controller","description":"Make  payments from selected external payment service provider"},{"name":"Query Payment controller","description":"Query payments from database"}],"paths":{"/multipay/payments/make-payment":{"post":{"tags":["Transaction controller"],"summary":"Makes Payment from the balance of the card","description":"Makes payment from balance of the card by using the selected external payment service provider and records payment info to database","operationId":"startPayment","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProcessPaymentRequestDTO"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ProcessPaymentResponseDTO"}}}}}}},"/multipay/customer/add-customer":{"post":{"tags":["Customer controller"],"summary":"Add customer","description":"Adds  new customer to  database","operationId":"addCustomer","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddCustomerRequestDTO"}}},"required":true},"responses":{"201":{"description":"When customer is successfully saved to data base","content":{"*/*":{"schema":{"type":"string"}}}},"400":{"description":"Bad Request"},"409":{"description":"When submitted data is in conflict with existing data in database or with itself","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorDetails"}}}}}}},"/multipay/payments/fetch-payments":{"get":{"tags":["Query Payment controller"],"summary":"Fetch by customer or card number","description":"Fethc payments made with parameters card number or customer number","operationId":"getPaymentsBySearchCriteria","parameters":[{"name":"cardNumber","in":"query","required":false,"schema":{"type":"string"}},{"name":"customerNumber","in":"query","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PaymentDTO"}}}}},"500":{"description":"When error being occured during querying database","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorDetails"}}}}}}},"/multipay/payments/fetch-payments-bydate":{"get":{"tags":["Query Payment controller"],"summary":"Fetch by date interval","description":"Fethc payments made with parameters start date and end date","operationId":"getAllPaymentsbyDateInterval","parameters":[{"name":"startDate","in":"query","required":true,"schema":{"type":"string","format":"date"}},{"name":"endDate","in":"query","required":true,"schema":{"type":"string","format":"date"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PaymentDTO"}}}}},"500":{"description":"When error being occured during querying database","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorDetails"}}}}}}},"/multipay/customer/get-all-customers":{"get":{"tags":["Customer controller"],"summary":"Fetch all customers","description":"Fetches all customers from database","operationId":"getAllCustomers","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CustomerDTO"}}}}},"500":{"description":"When error being occured during querying database","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorDetails"}}}}}}}},"components":{"schemas":{"ProcessPaymentRequestDTO":{"required":["amount","cardNumber"],"type":"object","properties":{"providerId":{"type":"integer","description":"Id of external payment service provider","format":"int32","example":1},"cardNumber":{"type":"string","description":"Number of the card which will be associated to payment","example":"571-1"},"amount":{"type":"number","description":"Amount to be paid","format":"double","example":45.11}},"description":"Payment Request Model Information"},"ProcessPaymentResponseDTO":{"type":"object","properties":{"responseHeader":{"$ref":"#/components/schemas/ResponseHeader"},"providerId":{"type":"integer","description":"Id of external payment service provider","format":"int32","example":1},"totalExecutionTime":{"type":"integer","description":"Response time of this API in milliseconds","format":"int64","example":115},"externalExecutionTime":{"type":"integer","description":"Response time of exteranal payment service provider in milliseconds","format":"int64","example":85}},"description":"Make Payment Response Model Information"},"ResponseHeader":{"type":"object","properties":{"code":{"type":"string","description":"Id of external payment service provider","example":"SUCCESSFUL"},"description":{"type":"string","description":"Description of code","example":"Operation is successful"},"successful":{"type":"boolean","description":"If operation is successful","example":true}},"description":"Common Response object for all responses of this api"},"AddCustomerRequestDTO":{"required":["customerNumber","email","name"],"type":"object","properties":{"name":{"type":"string","description":"Customer's name","example":"Ozgur"},"customerNumber":{"type":"string","description":"Unique customer number","example":"114-1"},"email":{"type":"string","description":"Customer's email address must be unique","example":"ozguryatmaz@yandex.com"},"cards":{"type":"array","writeOnly":true,"items":{"$ref":"#/components/schemas/CardDTO"}}},"description":"DTO for adding customer to database"},"CardDTO":{"type":"object","properties":{"cardNumber":{"type":"string","description":"Card number","example":"571-1"},"balance":{"type":"number","description":"Balance of the card","format":"double","example":1000.0}},"description":"Card DTO for trasfering card data"},"ErrorDetails":{"type":"object","properties":{"timestamp":{"type":"string","description":"Time when error occured","format":"date-time"},"message":{"type":"string","description":"Error message"},"details":{"type":"string","description":"Further details about the error"}},"description":"Error Model Information"},"PaymentDTO":{"type":"object","properties":{"amount":{"type":"number","description":"payment amount","format":"double","example":19.57},"cardNumber":{"type":"string","description":"Card number of the payment made","example":"571-1"},"customerNumber":{"type":"string","description":"Payment owner's number","example":"114-1"},"paymentDate":{"type":"string","description":"Time when payment is processed","format":"date-time"},"paymentServiceProvider":{"type":"string","description":"The external payment service used for the payment","example":"SERVÄ°CE-1"}},"description":"Payment DTO for trasfering payment data"},"CustomerDTO":{"type":"object","properties":{"name":{"type":"string","description":"Customer's name","example":"Ozgur"},"customerNumber":{"type":"string","description":"Unique customer number","example":"114-1"},"email":{"type":"string","description":"Customer's email address must be unique","example":"ozguryatmaz@yandex.com"}},"description":"Customer DTO for trasfering customer data"}}}}